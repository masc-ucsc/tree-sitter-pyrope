

let accumulate = fun (...a, acc:fun(a,b)->(_:bool)) -> total {
  total = a[0]
  for i in a[1..] {
    total = acc(total,i)
  }
  ret total
}

let add  = fun (a:string,b:string) { ret a ++ b }
   add ++= fun (a:int   ,b:int   ) { ret a +  b }

cassert accumulate(1,2,3, acc=add) == 6
cassert accumulate("a","b","c", acc=add).total == "abc"

let x= accumulate(true,false,true, acc=add) // compile error, 'add' does not have a valid function

