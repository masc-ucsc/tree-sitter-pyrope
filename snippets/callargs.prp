
let f1 = fun (a:u32,b:u6)->(:u33) {
  ret a+b
}

let Args = (
  ,a:u32 = 0
  ,b:u6 = 0
)

let fun2 = fun (...x:Args)->(:u33) {
  ret x.a+x.b
}

cassert fun2(a=2,b=4) == f1(2,4) == f1(a=2,b=4)

let fun3 = fun (...x:Args)->(res:u33) {
  res = x.a+x.b
}

cassert fun2(a=3,b=10) == fun3(a=3,b=10).res == fun3(2,11)

let Res_arg = (
  ,total:u33 = 0
)

let fun4 = fun (...x:Args)->(...res:Res_arg) {
  res.total = a+b
}

cassert fun3(a=3,b=10).res == fun4(a=3,b=10).total == fun4(a=7,b=6)

